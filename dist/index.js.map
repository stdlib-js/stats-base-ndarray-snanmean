{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar numelDimension = require( '@stdlib/ndarray-base-numel-dimension' );\nvar getStride = require( '@stdlib/ndarray-base-stride' );\nvar getOffset = require( '@stdlib/ndarray-base-offset' );\nvar getData = require( '@stdlib/ndarray-base-data-buffer' );\nvar strided = require( '@stdlib/stats-strided-snanmean' ).ndarray;\n\n\n// MAIN //\n\n/**\n* Computes the arithmetic mean of a one-dimensional single-precision floating-point ndarray, ignoring `NaN` values.\n*\n* @param {ArrayLikeObject<Object>} arrays - array-like object containing an input ndarray\n* @returns {number} arithmetic mean\n*\n* @example\n* var Float32Array = require( '@stdlib/array-float32' );\n* var ndarray = require( '@stdlib/ndarray-base-ctor' );\n*\n* var xbuf = new Float32Array( [ 1.0, 3.0, NaN, 2.0 ] );\n* var x = new ndarray( 'float32', xbuf, [ 4 ], [ 1 ], 0, 'row-major' );\n*\n* var v = snanmean( [ x ] );\n* // returns 2.0\n*/\nfunction snanmean( arrays ) {\n\tvar x = arrays[ 0 ];\n\treturn strided( numelDimension( x, 0 ), getData( x ), getStride( x, 0 ), getOffset( x ) ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = snanmean;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the arithmetic mean of a one-dimensional single-precision floating-point ndarray, ignoring `NaN` values.\n*\n* @module @stdlib/stats-base-ndarray-snanmean\n*\n* @example\n* var Float32Array = require( '@stdlib/array-float32' );\n* var ndarray = require( '@stdlib/ndarray-base-ctor' );\n* var snanmean = require( '@stdlib/stats-base-ndarray-snanmean' );\n*\n* var xbuf = new Float32Array( [ 1.0, 3.0, NaN, 2.0 ] );\n* var x = new ndarray( 'float32', xbuf, [ 4 ], [ 1 ], 0, 'row-major' );\n*\n* var v = snanmean( [ x ] );\n* // returns 2.0\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAiB,QAAS,sCAAuC,EACjEC,EAAY,QAAS,6BAA8B,EACnDC,EAAY,QAAS,6BAA8B,EACnDC,EAAU,QAAS,kCAAmC,EACtDC,EAAU,QAAS,gCAAiC,EAAE,QAqB1D,SAASC,EAAUC,EAAS,CAC3B,IAAIC,EAAID,EAAQ,CAAE,EAClB,OAAOF,EAASJ,EAAgBO,EAAG,CAAE,EAAGJ,EAASI,CAAE,EAAGN,EAAWM,EAAG,CAAE,EAAGL,EAAWK,CAAE,CAAE,CACzF,CAKAR,EAAO,QAAUM,IChBjB,IAAIG,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "numelDimension", "getStride", "getOffset", "getData", "strided", "snanmean", "arrays", "x", "main"]
}
